<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>勉強 on rienNeVaPlusのブログ</title>
    <link>https://e205723.github.io/study/</link>
    <description>Recent content in 勉強 on rienNeVaPlusのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 30 Sep 2019 08:00:00 +0000</lastBuildDate><atom:link href="https://e205723.github.io/study/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Twitterのbotを作る&#43;nohupコマンドでdaemon「っぽく」させる</title>
      <link>https://e205723.github.io/study/twitterbot/</link>
      <pubDate>Mon, 10 May 2021 00:08:35 +0900</pubDate>
      
      <guid>https://e205723.github.io/study/twitterbot/</guid>
      <description>Twitterのbotを作りたい B1の頃から、Twitterのbotやりたいなぁ&amp;hellip;。って思ってて、最近ちょっと暇だったので作ってみました。
未来、賢くなったら、「馬鹿だなぁ自分」って感じでこの記事を振り返りたい。未来、後輩から多少尊敬されるようになったら、後輩達にこの記事を書いた馬鹿な先輩の足跡を見て多少安心してもらえると嬉しいどす。
そもそもTwitterbotなんか作って何を学びたいの? 結果から言うと全部逃げの選択を取ってしまって、なんか動くけど&amp;hellip;うん、君もっと頑張ろうよ&amp;hellip;。ってなる感じのプロダクトになりました。特にセキュリティ関連の脅威がなくても、まあ動くなら正義じゃん?ってな感じで始めるしかない。とりあえず作る過程で何を学びたいか列挙する。
 API  Applicationが別のProgram(ing)を使うためのInterface(仲介役)みたいな いや、こんな説明だとOSの授業で先生に怒られるのは必至 API key(API使えるようになるための暗号)ってのが必要になるらしい   Daemon  デェ↑モンって読みます。紀元前98038年に爆誕した(おい) メインメモリ上で常駐(ずっと稼働してる)プログラムのこと バッググラウンドプロセスの一種     まあ、つまりTwitterのAPIの機能(ツイートをゲットしたり、ツイートを送信したり)を使うプログラムを、daemon化して、常駐化、つまりずっと稼働している状態にしたいっていう野望がありました。
では早速API keyをゲットしよう Twitter APIを使う準備をしましょう。
必要なもの
 携帯番号、メールアドレスと連携しているTwitterアカウント サーバ(学科VMとか)   ウェブ上でAPI keyを申請する API keyをゲットするために色々申請しなければなりません、作業は1時間もかからないと思います。
このサイトに飛んでください  ↑ 僕は趣味でbotを作るのでHobbyistを選びました
↑ 作るのはbotなのでMaking a botを選択
↑ 適当に情報を埋めていく
↑ 英語で「TwitterのAPIやデータをどのように使うつもりなのか」を英語で記述して説明する。コピペはダメかも。
↑ ここも多少英語で書き書き
↑ 情報の確認的な
↑ ポリシー的なのを読んでチェック、なんかあったら自己責任でお願いします
↑ Twitterアカウントと連携しているメールアドレスへ確認メールが送られる
↑ メールの受信ボックスへ行って、確認メールを見る。Confirm your emailをクリック
↑ ここのサイト  から上のようなページを探す、そしてCreate Projectをクリック
↑ 適当にプロジェクト名を記入</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>勉強 on rienNeVaPlusのブログ</title>
    <link>https://e205723.github.io/study/</link>
    <description>Recent content in 勉強 on rienNeVaPlusのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 30 Sep 2019 08:00:00 +0000</lastBuildDate><atom:link href="https://e205723.github.io/study/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>お金を稼ぐための機械学習</title>
      <link>https://e205723.github.io/study/data_science_for_money_making/</link>
      <pubDate>Thu, 24 Dec 2020 08:00:00 +0000</pubDate>
      
      <guid>https://e205723.github.io/study/data_science_for_money_making/</guid>
      <description>はじめに この記事ではお金を稼ぐための機械学習を学びます。株やFXなどの金融工学への応用は範囲外です。おもにビジネスに応用が効く技術のみ紹介しようと思います。この記事を書く際にあたってビジネスとかの話をしますが私はお金が好きなだけで意識は全く高くないです。
そもそも、株やFXへの応用は難しいことを理解しよう 値動きの予測の不可能性を説くランダムウォーク理論、相場を変動させうる情報は瞬時にマーケットに広がってしまい利益を生むことができる隙がないとする効率的市場仮説など、機械学習の応用を阻む壁が多すぎます。まず、値動きが予測できるアルゴリズムが作れたらその優れた頭脳を別のことに使ったほうが有意義だと思います。そもそも、お金稼ぎのために投資を勉強しようとしている人は情弱か頭が残念な方です。レバレッジ1倍でS&amp;amp;P 500を毎月買い続けるかプログラミングか宅建の勉強してください。
ビジネスへの応用 ゼロサムゲームの株やFXとは違い、ビジネスまたはマーケティングにおいては、ベンダーとクライアントが双方得する方向を目指せることもあるのでそちらのほうに機械学習の応用を考えるほうが良いと考えられます。まずはDDD(データ主導による意思決定)、それから広告への応用、利益曲線、そして最後にKPIと呼ばれる指標へのデータサイエンスの応用について話をしようと思います。よろしくおねがいします。
DDD(データ主導による意思決定) データ主導による意思決定は、個人の直感や経験に偏らない、データ分析に基づく意思決定のことを言います。そしてそれをDDDと呼び、DDDが企業のパフォーマンスを向上させるということがある研究によってすでにわかっています。[Brynjolfsson, E., Hitt, L. M., &amp;amp; Kim, H. 2011]この研究ではDDDを客観的に測る評価尺度が開発されていて、同研究で、この評価の標準偏差が1上昇するごとに生産性が4%~6%上昇するということがわかっています。
広告への応用 ご家庭の赤ちゃんの出生情報は比較的簡単に手に入るらしいです。幼児商品関連の企業はそれを使って最近赤ちゃんを出産した家庭に乳幼児に関する商品を宣伝するらしいです。とてもいい戦略ですね。しかし、この戦略は他の企業も取っているので、赤ちゃんが生まれた瞬間同時に他の企業と競争を強いられることになり優位性が生まれません。ここで、家庭の購入履歴から分析してその家庭に妊婦がいるかどうかを判別するモデルを作成して、そのモデルの判断をもとに広告を出す企業が一社あらわれました。結果はどうなるでしょうか。その一社のみがいち早く家庭に広告を出せて競争に勝つことができました、めでたしめでたし。
これは実話らしいです。データサイエンス及び機械学習はとてもおそろしいですね。このようにデータサイエンスで広告を最適化できたら素晴らしいことが起きます。
K-means法と決定木(CARTアルゴリズム) まずはK-means法の説明をします。
「この画像にいる人々を2グループに分割しろ。」と命令されたらどのように分類しますか？大抵は「男」と「女」に分割すると思います。
では「この人々を3グループに分割しろ。」と命令された場合はどう分割しますか？おそらく、「白人」、「黒人」、「黄色人種」という風にわけるのではないでしょうか。
機械学習の分野において、これらの例のようにグループを分割して割り振る処理をクラスタリング と呼び、先ほどのクラスタリングを行う代表的なアルゴリズムがK-means法です。
K-means法の実装や仕組みは詳しく説明しませんが、人が何も教えなくてもいろいろなグループに分類分けしてくれているという感じで捉えてもらってかまいません。ちなみにK-means法の「K」はKの個のグループに分けるという意味です。K=2でしたら2グループに分けるという意味です。ちなみに最適なKを定める手法もあります。[Shi, C., Wei, B., Wei, S., Wang, W., Liu, H., &amp;amp; Liu, J. 2020]
続いて、決定木(CARTアルゴリズム)の説明をします。
決定木(CARTアルゴリズム)はこの図のように「身長が180cmより高いか」、「体重は80kgより重いか」という風にYes, Noで答えられる条件を設定して分類します。
機械学習の分野において、どのグループに属するかを判断する問題を分類問題といい。決定木は分類問題を解いてくれます。実は決定木のアルゴリズムの他にサポートベクターマシン, ニューラルネットワーク, ect.ありますが、なぜ決定木(CARTアルゴリズム)をこの記事で説明しているかといいますと、説明可能性が高いからです。機械学習の手法はほとんどが説明可能性に乏しい中、決定木(CARTアルゴリズム)は説明可能性に優れていて、先ほどのK-means法と併用することで面白い効果を期待できます。
顧客データを利用し、顧客をK個にグループ分けして、決定木でなぜその分類になったか分析することで、広告に載せるモデルの参考にすることができます。たとえばグループJillをK-means法で発見して、決定木で分析した結果、グループJillには子供にサッカーを習わせる教育熱心なアッパーミドル階級の母親が多いとわかったとします。「特定の顧客に似たモデルがいる広告が適切な宣伝になる」と仮定した場合、ここでの最も適切な宣伝方法は「サッカーユニフォームを着た息子と楽しそうに買い物をしている女性」を映す広告を出すこととなります。
利益曲線 ハガキや封書などを直接自宅や会社に送付しサービス・製品やキャンペーンの案内をするための施策をダイレクトメール(DM)といいますが、言わずもがなコストがかかります。
例えば一人あたりDMを送るのに5ドルかかるとして、もしDMで紹介されている商品を購入したらDMを送る費用を差し引いて8ドル利益が出るとします。33.3&amp;hellip;%の人が商品を買い、残りの66.66&amp;hellip;%の人が商品を購入しない場合、期待値は0.33&amp;hellip;×8 + 0.66&amp;hellip;×(-6) = -0.66&amp;hellip;となり一人にDMを送るごとに0.66ドルかかってしまうという計算になります。
上の図の赤の折れ線グラフは100人を無作為に選んでDMを送った場合の利益曲線です。
利益は0ドルを下回り、赤字となります。この場合、DMを送るという施策は失敗すると想定していいでしょうか。 実はまだその判断は早いんです。
DMの商品を買ってくれる人を1、買わない人を0として判別するモデルを作ります。そしてそのモデルは顧客のデータを入力したとき、0~1の間の連続値を算出して1に近ければ(0.5以上)、商品を買う人だと予測し、0に近ければ(0.5未満)、買わない人だと予測します。さきほどの100人を分析して算出値が1に近い順に並び替えてDMをその順で送るシュミレーションをします。この場合の利益曲線が青の折れ線グラフです。順番を並び替える理由は最初のほうに実際に買ってくれる人が集まるからです。そうして青の折れ線グラフの頂点に位置する人までDMを送り終えたら、これ以上DMを送るのを止めるという施策をとります。この場合の利益は200ドル弱となり、100人を調べてDMを送ると、200ドルの価値があるということを示唆しています。こうして判別モデルと利益曲線を併用することで単純な確率論では取れない施策も、利益を産むようにすることができます。
続編を検討中 備忘録のためだけにこの記事を書きましたが、資料を作る作業はなかなか面白かったです。また続編を書こうかと思います。いつの日かまた。</description>
    </item>
    
    <item>
      <title>ニューラルネットワークの仕組みの解説と実装</title>
      <link>https://e205723.github.io/study/how_to_make_neural_network/</link>
      <pubDate>Sun, 29 Nov 2020 08:00:00 +0000</pubDate>
      
      <guid>https://e205723.github.io/study/how_to_make_neural_network/</guid>
      <description>はじめに この記事ではニューラルネットワークの仕組みを説明して実装したコードを掲載しております。琉球大学の知能情報コースprogramming1で習う知識で実装しています。並列処理をするようには設計していません。 理解度を深めるために問題を各所に掲載しております。回答は最後の方へスクロールダウンすると見つけることができます。
この記事を読むべき人  ニューラルネットワークの仕組みがわからないままTensorflowやPytorchなどの機械学習APIを使いたくない人 線形代数が苦手だけどニューラルネットワークに興味ある人(極力、図を使って説明しています)   脳のニューロンの仕組み 実際に脳に存在するニューロンの図 脳のニューロンはそのニューロンに集まる信号を一つづつ重み付け(信号を大きくしたり小さくしたりする)してその和が閾値(境目となる値)を超えると他のニューロンに信号を発火して、超えないと他のニューロンに信号を発火しない仕組みになっている。
脳のニューロンの仕組み 脳のニューロンの振る舞いを形式的に表現すると以下のような図になる。
形式ニューロン 重みと閾値 重みと閾値の計算 ニューロンに送られてくる信号をxとしてそれに対応する重みのベクトルをw(重み=weightのw)、閾値をb(閾値=biasのb)、重み付けされた信号の和から閾値を引いた値をuとすると
となる。下の表と再度表示する形式ニューロンの対応を確認されたし。
問題(1_1, 1_2) 1_1. 送られる信号をx = {x1,x2,x3,x4}、重みをw = {{w1},{w2},{w3},{w4}}、閾値をb 、重み付けされた信号の和から閾値を引いた値をuとすると、u = xw-b = x1w1+x2w2+x3w3+x4w4 - b と表すことができるが、 x = {1,-1,2,-2}, w = {{1},{2},{-1},{-2}}, b = 2とするとuはいくらか。
1_2.
この図の各々の信号（青）と重み（黄色）を参考にuを求めよ、なお赤色の玉の中の数字の-(-3)は閾値が-3で、重み付けされた信号の和から-3を引くという意味とする。
コラム: ニューラルネットワークの学習 ニューラルネットワークは機械学習の一分野であり機械学習は読んで字の如く「機械に学習させること」である。ではニューラルネットワーク、つまりニューロンの網形体はどのように学習をするかというと「重みと閾値」を修正することで学習をする。ちなみに重みを修正するアルゴリズムをオプティマイザーというが閾値も全く同じアルゴリズムを採用する。ちなみに信号を重み付けして和を求めることを数学的な専門用語で線形結合と呼ぶ。
活性化関数 重みと閾値から、重み付けされた信号の和から閾値を引いた値を求める方法を学んだ。ここでは脳のニューロンの発火に相当する活性化関数を学ぶ。
脳の発火の仕組みを数理的に表現する。重み付けされた信号の和から閾値を引いた値をuとするとuが0以上(=信号の和が閾値より大きい)であれば1(信号を発火する)を返す、0未満(=信号の和が閾値より小さい)であるなら0(信号を発火しない)を返すということになる。uを引数として下記のような定義をする関数のことを活性化関数という。ちなみにこの活性化関数はステップ関数と呼ばれる。
ステップ関数 発火の結果をzとし、z = f(u)としてz(活性化関数の戻り値)の定義を数式で表現すると、
となる。 ステップ関数を横軸u、縦軸zでグラフで表現すると
こうなる。
問題(2_1, 2_2) 2_1. uを1_1の答えとし, f(u)をステップ関数という活性化関数で定義し、z = f(u)で発火を表現するとzは1と0どちらか。
2_2. uを1_2の答えとし, f(u)をステップ関数という活性化関数で定義し、z = f(u)で発火を表現するとzは1と0どちらか。</description>
    </item>
    
  </channel>
</rss>
